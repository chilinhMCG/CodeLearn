@inherits LayoutComponentBase
@inject IUserRepository UserRepository;

<MudThemeProvider Theme="MCGTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <NavBar />
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large">

                <CascadingValue Value="_userTask">
                @if (_isAdmin)
                {
                    <MudGrid>

                        <MudItem Style="height : fit-content" xs="12" sm="3">
                            <CodeLearn.Component.DashBoard.Menu.DashBoardMenu></CodeLearn.Component.DashBoard.Menu.DashBoardMenu>
                        </MudItem>
                        <MudItem xs="12" sm="9">
                            @Body
                        </MudItem>
                    </MudGrid>
                }
                else
                {
                    @Body
                }
            </CascadingValue>

                <MudScrollToTop>
                    <MudFab Color="Color.Success" Icon="@Icons.Filled.ArrowCircleUp" />
                </MudScrollToTop>
            </MudContainer>

        </MudMainContent>



        <Footer />
    </MudLayout>

@code{ 
    MudTheme MCGTheme = new()
    {
        Palette = new Palette()
        {
            Primary = "#19B33D",
            AppbarBackground = "#19B33D",
        }
    };

    [CascadingParameter]
    private Task<AuthenticationState> _authenticationStateTask { get; set; }

    private Task<User> _userTask;

    private bool _isAdmin = false;

    private ClaimsPrincipal _identityUser;

    protected override async Task OnInitializedAsync()
    {

        var authState = await _authenticationStateTask;
        _identityUser = authState.User;

        _userTask = GetUser();

        _isAdmin = _identityUser.IsInRole("Admin");
    }

    private async Task<User> GetUser()
    {
        if (_identityUser.Identity.IsAuthenticated)
            return await UserRepository.GetUserByEmailAsync(_identityUser.FindFirst(ClaimTypes.Email).Value);

        else
            return null;
    }
}
