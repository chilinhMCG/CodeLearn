@page "/"
@inject ICourseRepository CourseRepository
@inject ICourseTypeRepository CourseTypeRepository
<MudPaper Class="p-4 pb-1 mt-4 ">
    <MudText Typo="Typo.h4" Color="Color.Dark">
        Tự học lập trình trực tuyến. Hãy bắt đầu với khoá học đầu tiên của bạn!
    </MudText>
    <MudGrid>
        <MudItem lg="4">
            <MudTextField @bind-Value="_searchString"
                          Label="Tìm kiếm khóa học"
                          Variant="Variant.Outlined"
                          Adornment="Adornment.End"
                          AdornmentIcon="@Icons.Filled.Search"
                          Margin="Margin.Dense"
                          Class="my-4" />
        </MudItem>
    </MudGrid>
</MudPaper>
<br />
@foreach (var item in courseTypes)
{
    @if (searchCourses.Any(x => x.CourseTypeId == item.Id))
     {
        <MudPaper Class="p-4">
            <MudText Typo="Typo.h5">@item.Name</MudText>
            <br />
            <MudGrid>
                @foreach (var course in searchCourses.Where(x => x.CourseTypeId == item.Id))
                {
                    <MudItem lg="3">
                        <MudLink Href="@("/course/" + course.Id.ToString())" Underline="Underline.None">
                            <MudCard Elevation="0">
                                <MudCardMedia Image="@($"images/CoursesImg/{course.Thumbnail}")" Height="200" />
                                <MudCardContent>
                                    <MudText Typo="Typo.h6">@course.Name</MudText>
                                    <MudText Typo="Typo.caption">@course.Author</MudText>
                                    <MudText Typo="Typo.body2">@((MarkupString)(@course.Description.Substring(0, 44) + "..."))</MudText>
                                    <br />
                                    <MudRating SelectedValue="@course.Rating" Size="Size.Small" ReadOnly="true" />
                                </MudCardContent>
                                <MudDivider></MudDivider>
                                <MudCardActions>
                                    <MudButton Variant="Variant.Text" Color="Color.Info">@course.Status</MudButton>
                                </MudCardActions>
                            </MudCard>
                        </MudLink>
                    </MudItem>
                }
            </MudGrid>
        </MudPaper>
        <br>
     }
 }
@code {
    string _searchString = String.Empty;

    protected List<CourseType> courseTypes { get; set; }

    protected List<Course> courses { get; set; }

    protected IEnumerable<Course> searchCourses { get; set; }

    protected override void OnInitialized()
    {
        courseTypes = CourseTypeRepository.GetAllCourseType();
        courses = CourseRepository.GetAllCourse();
        searchCourses = CourseRepository.GetAllCourse()
            .Where(x => string.IsNullOrEmpty(_searchString) ||
                x.Name.ToLower().Contains(_searchString.ToLower())
        );
    }
}
